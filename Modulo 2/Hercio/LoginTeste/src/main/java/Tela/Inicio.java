package Tela;

import java.sql.Connection;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

public class Inicio extends javax.swing.JFrame {

    public Inicio() {
        initComponents();
    }

    /**
     * Verifica a conexão com o banco de dados.
     */
    private void checkDatabaseConnection() {
        try (Connection conn = Database.getConnection()) {
            if (conn == null || conn.isClosed()) {
                JOptionPane.showMessageDialog(this, "Falha na conexão com o banco de dados. Ligue o XAMPP.");
                System.exit(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados: " + e.getMessage());
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openLogin() {
        JFrame loginFrame = new Login();
        loginFrame.setVisible(true);
        loginFrame.setLocationRelativeTo(null);
    }

    private void openCadastro() {
        JFrame cadastroFrame = new Cadastro();
        cadastroFrame.setVisible(true);
        cadastroFrame.setLocationRelativeTo(null);
    }

    /**
     * Método principal para iniciar a aplicação com o tema FlatLaf.
     */
    public static void main(String args[]) {
        // Solicita ao usuário que escolha o tema
        String theme = JOptionPane.showInputDialog(null, "Escolha o tema: 'light' ou 'dark'", "Configuração de Tema", JOptionPane.QUESTION_MESSAGE);
        setLookAndFeel(theme);

        java.awt.EventQueue.invokeLater(() -> new Inicio().setVisible(true));
    }

    /**
     * Configura o Look and Feel da aplicação.
     * @param theme o tema a ser definido ("light" para FlatLightLaf, "dark" para FlatDarkLaf)
     */
    private static void setLookAndFeel(String theme) {
        try {
            if ("dark".equalsIgnoreCase(theme)) {
                //UIManager.setLookAndFeel(new FlatDarkLaf());
            } else {
                //UIManager.setLookAndFeel(new FlatLightLaf());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
